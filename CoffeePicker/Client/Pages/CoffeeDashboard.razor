@page "/coffees"
@inject HttpClient HttpClient
@using CoffeePicker.Shared

<div class="row">
    <div class="col-12 col-sm-12 col-md-12 col-lg-8 col-xl-8">
        <h3>Coffees</h3>
        <br>
        <div class="row">
            @if (Coffees.Any())
            {
                @foreach (var coffee in Coffees)
                {
                    <div class="col-12 col-sm-6 col-md-6 col-lg-6 col-xl-4 mh-25 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">#@coffee.Id @coffee.Title</h5>
                                <p class="card-text">@coffee.Description.Substring(0, 70) ...</p>
                                <a href="/coffees" @onclick="() => GetDetails(coffee.Id)">More...</a>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No coffees available</p>
            }
        </div>
    </div>
    <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
        <h3>Details</h3>
        <br>
        @if (SelectedCoffee.Title is not null)
        {
            <h3>@SelectedCoffee.Title</h3>
            <p>@SelectedCoffee.Description</p>
            <p>Ingredients</p>
            <ul>
                @foreach (var ingredient in SelectedCoffee.Ingredients)
                {
                    <li class="list-group-item">@ingredient</li>
                }
            </ul>
        }
        else
        {
            <p>No coffee selected</p>
        }
    </div>
</div>


@code {
    private List<Coffee> Coffees = new();
    private Coffee SelectedCoffee = new();

    protected override async Task OnInitializedAsync()
    {
        Coffees = await HttpClient.GetFromJsonAsync<List<Coffee>>("Coffee/List");
    }

    private async Task GetDetails(int id)
    {
        SelectedCoffee = await HttpClient.GetFromJsonAsync<Coffee>($"Coffee/{id}");
    }

}
